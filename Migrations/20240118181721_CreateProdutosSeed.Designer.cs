// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using STFTest.Data;

#nullable disable

namespace stf_test.Migrations
{
    [DbContext(typeof(STFTestDBContext))]
    [Migration("20240118181721_CreateProdutosSeed")]
    partial class CreateProdutosSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("STFTest.Models.ItemPedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPedido")
                        .HasColumnType("int");

                    b.Property<int>("IdProduto")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdPedido");

                    b.HasIndex("IdProduto");

                    b.ToTable("ItensPedido");
                });

            modelBuilder.Entity("STFTest.Models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailCliente")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.Property<string>("NomeCliente")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.Property<bool>("Pago")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("STFTest.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomeProduto")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.ToTable("Produtos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataAtualizacao = new DateTime(2024, 1, 18, 18, 17, 20, 882, DateTimeKind.Utc).AddTicks(2911),
                            DataCriacao = new DateTime(2024, 1, 18, 18, 17, 20, 882, DateTimeKind.Utc).AddTicks(2910),
                            NomeProduto = "Produto 1",
                            Valor = 10m
                        },
                        new
                        {
                            Id = 2,
                            DataAtualizacao = new DateTime(2024, 1, 18, 18, 17, 20, 882, DateTimeKind.Utc).AddTicks(2914),
                            DataCriacao = new DateTime(2024, 1, 18, 18, 17, 20, 882, DateTimeKind.Utc).AddTicks(2914),
                            NomeProduto = "Produto 2",
                            Valor = 20m
                        },
                        new
                        {
                            Id = 3,
                            DataAtualizacao = new DateTime(2024, 1, 18, 18, 17, 20, 882, DateTimeKind.Utc).AddTicks(2916),
                            DataCriacao = new DateTime(2024, 1, 18, 18, 17, 20, 882, DateTimeKind.Utc).AddTicks(2916),
                            NomeProduto = "Produto 3",
                            Valor = 30m
                        },
                        new
                        {
                            Id = 4,
                            DataAtualizacao = new DateTime(2024, 1, 18, 18, 17, 20, 882, DateTimeKind.Utc).AddTicks(2918),
                            DataCriacao = new DateTime(2024, 1, 18, 18, 17, 20, 882, DateTimeKind.Utc).AddTicks(2917),
                            NomeProduto = "Produto 4",
                            Valor = 40m
                        },
                        new
                        {
                            Id = 5,
                            DataAtualizacao = new DateTime(2024, 1, 18, 18, 17, 20, 882, DateTimeKind.Utc).AddTicks(2919),
                            DataCriacao = new DateTime(2024, 1, 18, 18, 17, 20, 882, DateTimeKind.Utc).AddTicks(2919),
                            NomeProduto = "Produto 5",
                            Valor = 50m
                        },
                        new
                        {
                            Id = 6,
                            DataAtualizacao = new DateTime(2024, 1, 18, 18, 17, 20, 882, DateTimeKind.Utc).AddTicks(2922),
                            DataCriacao = new DateTime(2024, 1, 18, 18, 17, 20, 882, DateTimeKind.Utc).AddTicks(2921),
                            NomeProduto = "Produto 6",
                            Valor = 60m
                        },
                        new
                        {
                            Id = 7,
                            DataAtualizacao = new DateTime(2024, 1, 18, 18, 17, 20, 882, DateTimeKind.Utc).AddTicks(2923),
                            DataCriacao = new DateTime(2024, 1, 18, 18, 17, 20, 882, DateTimeKind.Utc).AddTicks(2923),
                            NomeProduto = "Produto 7",
                            Valor = 70m
                        },
                        new
                        {
                            Id = 8,
                            DataAtualizacao = new DateTime(2024, 1, 18, 18, 17, 20, 882, DateTimeKind.Utc).AddTicks(2924),
                            DataCriacao = new DateTime(2024, 1, 18, 18, 17, 20, 882, DateTimeKind.Utc).AddTicks(2924),
                            NomeProduto = "Produto 8",
                            Valor = 80m
                        },
                        new
                        {
                            Id = 9,
                            DataAtualizacao = new DateTime(2024, 1, 18, 18, 17, 20, 882, DateTimeKind.Utc).AddTicks(2926),
                            DataCriacao = new DateTime(2024, 1, 18, 18, 17, 20, 882, DateTimeKind.Utc).AddTicks(2925),
                            NomeProduto = "Produto 9",
                            Valor = 90m
                        },
                        new
                        {
                            Id = 10,
                            DataAtualizacao = new DateTime(2024, 1, 18, 18, 17, 20, 882, DateTimeKind.Utc).AddTicks(2928),
                            DataCriacao = new DateTime(2024, 1, 18, 18, 17, 20, 882, DateTimeKind.Utc).AddTicks(2928),
                            NomeProduto = "Produto 10",
                            Valor = 100m
                        });
                });

            modelBuilder.Entity("STFTest.Models.ItemPedido", b =>
                {
                    b.HasOne("STFTest.Models.Pedido", "Pedido")
                        .WithMany()
                        .HasForeignKey("IdPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("STFTest.Models.Produto", "Produto")
                        .WithMany("ItensPedido")
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("STFTest.Models.Produto", b =>
                {
                    b.Navigation("ItensPedido");
                });
#pragma warning restore 612, 618
        }
    }
}
